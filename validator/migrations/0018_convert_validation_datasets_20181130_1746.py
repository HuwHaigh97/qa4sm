# Generated by Django 2.1 on 2018-11-30 17:46

from django.db import migrations
from django.db import models

def convert_datasets(apps, schema_editor):
    Dataset = apps.get_model('validator', 'Dataset')
    DataVariable = apps.get_model('validator', 'DataVariable')
    DatasetVersion = apps.get_model('validator', 'DatasetVersion')
    ValidationRun = apps.get_model('validator', 'ValidationRun')

    for run in ValidationRun.objects.all():
        run.data_dataset = Dataset.objects.get(short_name=run._data_dataset)
        run.ref_dataset = Dataset.objects.get(short_name=run._ref_dataset)

        try:
            run.data_variable = DataVariable.objects.get(short_name=run._data_dataset + "_" + run._data_variable.replace(' ', '_'))
        except Exception as e:
            print(e)

        try:
            run.ref_variable = DataVariable.objects.get(short_name=run._ref_dataset + "_" + run._ref_variable.replace(' ', '_'))
        except Exception as e:
            print(e)

        d_short_name = run._data_dataset + "_" + run._data_version.upper()
        if run._data_dataset == 'GLDAS':
            if run._data_version == 'GLDAS_TEST':
                d_short_name = 'GLDAS_TEST'
            else:
                d_short_name = 'GLDAS_NOAH025_3H_2_1'

        r_short_name = run._ref_dataset + "_" + run._ref_version.upper()
        if run._ref_dataset == 'GLDAS':
            if run._data_version == 'GLDAS_TEST':
                r_short_name = 'GLDAS_TEST'
            else:
                r_short_name = 'GLDAS_NOAH025_3H_2_1'

        try:
            run.data_version = DatasetVersion.objects.get(short_name=d_short_name)
        except Exception as e:
            print(e)

        try:
            run.ref_version = DatasetVersion.objects.get(short_name=r_short_name)
        except Exception as e:
            print(e)

        run.save()

class Migration(migrations.Migration):

    dependencies = [
        ('validator', '0017_convert_datasets_20181130_1655'),
    ]

    operations = [
        migrations.RenameField(model_name='ValidationRun', old_name='data_dataset', new_name='_data_dataset',),
        migrations.RenameField(model_name='ValidationRun', old_name='ref_dataset', new_name='_ref_dataset',),
        migrations.RenameField(model_name='ValidationRun', old_name='data_version', new_name='_data_version',),
        migrations.RenameField(model_name='ValidationRun', old_name='ref_version', new_name='_ref_version',),
        migrations.RenameField(model_name='ValidationRun', old_name='data_variable', new_name='_data_variable',),
        migrations.RenameField(model_name='ValidationRun', old_name='ref_variable', new_name='_ref_variable',),

        migrations.AddField(model_name='ValidationRun', name='data_dataset', field=models.ForeignKey(to='validator.Dataset', related_name='data_dataset', on_delete=models.PROTECT, null=True)),
        migrations.AddField(model_name='ValidationRun', name='ref_dataset', field=models.ForeignKey(to='validator.Dataset', related_name='ref_dataset', on_delete=models.PROTECT, null=True)),
        migrations.AddField(model_name='ValidationRun', name='data_version', field=models.ForeignKey(to='validator.DatasetVersion', related_name='data_version', on_delete=models.PROTECT, null=True)),
        migrations.AddField(model_name='ValidationRun', name='ref_version', field=models.ForeignKey(to='validator.DatasetVersion', related_name='ref_version', on_delete=models.PROTECT, null=True)),
        migrations.AddField(model_name='ValidationRun', name='data_variable', field=models.ForeignKey(to='validator.DataVariable', related_name='data_variable', on_delete=models.PROTECT, null=True)),
        migrations.AddField(model_name='ValidationRun', name='ref_variable', field=models.ForeignKey(to='validator.DataVariable', related_name='ref_variable', on_delete=models.PROTECT, null=True)),

        migrations.RunPython(convert_datasets),

        migrations.RemoveField(model_name='ValidationRun', name='_data_dataset'),
        migrations.RemoveField(model_name='ValidationRun', name='_ref_dataset'),
        migrations.RemoveField(model_name='ValidationRun', name='_data_version'),
        migrations.RemoveField(model_name='ValidationRun', name='_ref_version'),
        migrations.RemoveField(model_name='ValidationRun', name='_data_variable'),
        migrations.RemoveField(model_name='ValidationRun', name='_ref_variable'),
    ]
